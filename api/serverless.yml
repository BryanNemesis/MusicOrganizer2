org: bryannemesis
app: bryan-music-app
service: bryan-music-app-api
plugins:
  - serverless-offline
  - serverless-python-requirements
frameworkVersion: '2'
useDotenv: true

provider:
  name: aws
  runtime: python3.8
  lambdaHashingVersion: '20201221'
  region: eu-central-1
  environment:
    SPOTIFY_CLIENT_ID: ${env:SPOTIFY_CLIENT_ID}
    SPOTIFY_CLIENT_SECRET: ${env:SPOTIFY_CLIENT_SECRET}
    SPOTIFY_REDIRECT_URI: ${env:SPOTIFY_REDIRECT_URI}
  iamRoleStatements:
  - Effect: "Allow"
    Action:
      - dynamodb:Query
      - dynamodb:Scan
      - dynamodb:GetItem
      - dynamodb:PutItem
      - dynamodb:UpdateItem
      - dynamodb:DeleteItem
    Resource:
      Fn::GetAtt:
        - CollectionsDBTable
        - Arn
  - Effect: "Allow"
    Action:
      - dynamodb:Query
      - dynamodb:Scan
      - dynamodb:GetItem
      - dynamodb:PutItem
      - dynamodb:UpdateItem
      - dynamodb:DeleteItem
    Resource:
      Fn::GetAtt:
        - UsersDBTable
        - Arn

functions:
  login_redirect:
    handler: handlers/login_redirect.handler
    events:
      - httpApi:
          path: /login_redirect
          method: GET

  login_callback:
    handler: handlers/login_callback.handler
    events:
      - httpApi:
          path: /login_callback
          method: GET

  get_saved_albums:
    handler: handlers/get_saved_albums.handler
    events:
      - httpApi:
          path: /get_saved_albums
          method: GET

  get_collections:
    handler: handlers/get_collections.handler
    events:
      - httpApi:
          path: /collections
          method: GET

  create_collection:
    handler: handlers/create_collection.handler
    events:
      - httpApi:
          path: /collections
          method: POST

  delete_collection:
    handler: handlers/delete_collection.handler
    events:
      - httpApi:
          path: /collections
          method: DELETE



resources:
  - ${file(resources/collections-table.yml)}
  - ${file(resources/users-table.yml)}
